@model PrMngSystem.Models.Task

@{
    ViewBag.Title = "EditTask";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="jumbotron jumbotron-fluid">
        <h2>Edit Task</h2>
        <div class="form-horizontal" style="border: groove; border-color: darkseagreen">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.taskID)

            @Html.HiddenFor(model => model.projectID)


            <div class="form-group">
                @Html.LabelFor(model => model.progress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.progress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.progress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.deadline, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (ViewBag.ReadonlyDate)
                {
                        @Html.EditorFor(model => model.deadline, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @type = "date" } })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.deadline, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    }
                    @Html.ValidationMessageFor(model => model.deadline, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.status, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.DropDownList("status", null, htmlAttributes: new { @class = "form-control" })*@
                    @Html.DropDownListFor(model => model.status, ViewBag.Status as SelectList,
             "Select Status", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                </div>
            </div>

            @if (!ViewBag.ReadonlyAssignee)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.assignee, "Assign to", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.assignee, ViewBag.Assignee as SelectList,
                        "Select", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.assignee, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save changes" class="btn btn-success" />
                </div>
            </div>
        </div>
        </div>
        }

        @if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                @ViewBag.Message
            </div>
        }

        <div>
            @Html.ActionLink("Back to Tasks List", "Tasks", "Task", null, new { @style= "color: blue"})
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            @Scripts.Render("~/bundles/bootstrap")

            <style>
                h2 {
                    background-color: darkseagreen;
                    color: white
                }
            </style>
        }
